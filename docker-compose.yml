version: "3.9"

services:
  db:
    image: postgres:16
    container_name: authx_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  app:
    build: .
    container_name: authx_app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # переопределяем БД на сервис db внутри сети compose
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/app
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: app
    volumes:
      - ./authentication:/app/authentication
      - ./scripts:/app/scripts
    command: ["/app/scripts/wait-for-db.sh", "uvicorn", "authentication.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  pgdata:
